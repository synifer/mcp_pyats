{
  "name": "pyATS Agent",
  "description": "Cisco pyATS Agent with access to many MCP tools",
  "version": "1.0",
  "url": "https://90c8-70-49-67-159.ngrok-free.app",
  "endpoint": "https://90c8-70-49-67-159.ngrok-free.app",
  "methods": {
    "send": "https://90c8-70-49-67-159.ngrok-free.app/"
  },
  "capabilities": {
    "a2a": true,
    "tool-use": true,
    "chat": true,
    "push-notifications": true
  },
  "skills": [
    {
      "id": "pyATS_run_show_command",
      "name": "pyATS_run_show_command",
      "description": "Executes a general Cisco IOS/NX-OS 'show' command (e.g., 'show ip interface brief', 'show version', 'show inventory') on a specified device to gather its current operational state or specific information. Returns parsed JSON output when available, otherwise returns raw text output. Use this for general device information gathering. Requires 'device_name' and the exact 'command' string.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "command"
        ],
        "title": "pyATS_run_show_command_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_configure_device",
      "name": "pyATS_configure_device",
      "description": "Applies configuration commands to a specified Cisco IOS/NX-OS device. Enters configuration mode and executes the provided commands to modify the device's settings. Use this for making changes to the device configuration. Requires 'device_name' and the 'config_commands' (can be multi-line).",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "config_commands": {
            "title": "Config Commands",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "config_commands"
        ],
        "title": "pyATS_configure_device_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_show_running_config",
      "name": "pyATS_show_running_config",
      "description": "Retrieves the full running configuration from a Cisco IOS/NX-OS device using 'show running-config'. Returns raw text output as there is no parser available. Requires 'device_name'.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          }
        },
        "required": [
          "device_name"
        ],
        "title": "pyATS_show_running_config_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_show_logging",
      "name": "pyATS_show_logging",
      "description": "Retrieves recent system logs using 'show logging last 250' on a Cisco IOS/NX-OS device. Returns raw text output. Requires 'device_name'.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          }
        },
        "required": [
          "device_name"
        ],
        "title": "pyATS_show_logging_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_ping_from_network_device",
      "name": "pyATS_ping_from_network_device",
      "description": "Executes a 'ping' command on a specified Cisco IOS/NX-OS device to test network reachability to a target IP address or hostname (e.g., 'ping 8.8.8.8', 'ping vrf MGMT 10.0.0.1'). Returns parsed JSON output for standard pings when possible, otherwise raw text. Requires 'device_name' and the exact 'command' string.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "command"
        ],
        "title": "pyATS_ping_from_network_device_Input",
        "type": "object"
      }
    },
    {
      "id": "pyATS_run_linux_command",
      "name": "pyATS_run_linux_command",
      "description": "Executes common Linux commands on a specified device (e.g., 'ifconfig', 'ps -ef', 'netstat -rn', including piping and redirection). Parsed output is returned when available, otherwise raw output.",
      "parameters": {
        "properties": {
          "device_name": {
            "title": "Device Name",
            "type": "string"
          },
          "command": {
            "title": "Command",
            "type": "string"
          }
        },
        "required": [
          "device_name",
          "command"
        ],
        "title": "pyATS_run_linux_command_Input",
        "type": "object"
      }
    },
    {
      "id": "get-selected-cell",
      "name": "get-selected-cell",
      "description": "Get the currently selected diagram cell. (Note: Accepts simplified input)"
    },
    {
      "id": "add-rectangle",
      "name": "add-rectangle",
      "description": "Add a labeled rectangle shape. (Note: Accepts simplified input)"
    },
    {
      "id": "add-edge",
      "name": "add-edge",
      "description": "Create a connector (edge). (Note: Accepts simplified input)"
    },
    {
      "id": "delete-cell-by-id",
      "name": "delete-cell-by-id",
      "description": "Delete a diagram cell. (Note: Accepts simplified input)"
    },
    {
      "id": "get-shape-categories",
      "name": "get-shape-categories",
      "description": "List all shape categories. (Note: Accepts simplified input)"
    },
    {
      "id": "get-shapes-in-category",
      "name": "get-shapes-in-category",
      "description": "List shapes in a category. (Note: Accepts simplified input)"
    },
    {
      "id": "get-shape-by-name",
      "name": "get-shape-by-name",
      "description": "Get shape by name. (Note: Accepts simplified input)"
    },
    {
      "id": "add-cell-of-shape",
      "name": "add-cell-of-shape",
      "description": "Add shape-based vertex. (Note: Accepts simplified input)"
    }
  ]
}